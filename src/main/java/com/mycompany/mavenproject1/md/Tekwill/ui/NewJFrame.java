/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1.md.Tekwill.ui;


import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Integer.parseInt;
import javax.swing.JOptionPane;
import com.mycompany.mavenproject1.md.Tekwill.dao.EmployeeDao;
import javax.swing.table.DefaultTableModel;
import com.mycompany.mavenproject1.md.Tekwill.domain.Department;
import com.mycompany.mavenproject1.md.Tekwill.exceptions.EmployeeException;
import com.mycompany.mavenproject1.md.Tekwill.exceptions.EmployeeExceptionChecker;

import com.mycompany.mavenproject1.md.Tekwill.service.EmployeeService;
import com.mycompany.mavenproject1.md.Tekwill.domain.Employee;
import com.mycompany.mavenproject1.md.Tekwill.service.DepartmentService;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.stream.Collectors;
import javax.swing.SwingUtilities;
import java.util.Collections;

/**
 *
 * @author super
 */
public class NewJFrame extends javax.swing.JFrame {
    public static boolean isNumeric(String str) {
            if(str.length()==0){
            return false;}
            
            for(int i=0; i<str.length(); i++){
                if(str.charAt(i)<='9' && str.charAt(i)>='0'){
                continue;
                }
                return false;
            }
            return true;
    }   
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    EmployeeService employeeService = new EmployeeService();
    DepartmentService departmentService = new DepartmentService();
    
    
    Department[] departmentsArr = departmentService.getArr();
    String[] departmentsString = null;
    void setDepartmentsArr(){
        departmentsArr = departmentService.getArr();
        int newGenerator=0;
        for(int i=0; i<departmentsArr.length; i++){
            newGenerator=java.lang.Math.max(newGenerator, departmentsArr[i].getId());
        }
        Department.setIdGenerator(newGenerator+1);
    }
    
    void setDepartmentsString(){
      departmentsString = new String[departmentsArr.length ];
      for(int i=0; i<departmentsArr.length; i++){
          departmentsString[i] = departmentsArr[i].getName();
      }
      //return departmentsString;
    };
    
    
    
   DefaultTableModel model=new DefaultTableModel(
    new Object [][] {
    
    },
    new String [] {
        "ID", "Name", "Last Name", "Department", "Creation Date", "Updated Date"
    }
);
   
   javax.swing.table.DefaultTableModel filterResultsTableModel = new javax.swing.table.DefaultTableModel(
    new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
    },
    new String [] {
        "ID", "Name", "Last Name", "Department", "Creation Date", "Updated Date"
    }
);

   javax.swing.table.DefaultTableModel departmentTableModel = new javax.swing.table.DefaultTableModel(
    new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
    },
    new String [] {
        "ID", "Name"
    }
);
   
   void departmentTableCreate(javax.swing.table.DefaultTableModel model, Department department){
        model.addRow( new Object[]{ 
                department.getId(),
                department.getName()
         }  );
   }
   
   void departmentTableUpdate(javax.swing.table.DefaultTableModel model, int id, String name){
       for(int i=0; i<model.getRowCount(); i++){
            if( Integer.valueOf( String.valueOf(model.getValueAt(i, 0))  )==id){
                model.setValueAt(name, i, 1);
                return;
            }
        }
   }
   
   void departmentTableDelete(javax.swing.table.DefaultTableModel model, int id){
       for(int i=0; i<model.getRowCount(); i++){
            if( Integer.valueOf( String.valueOf(model.getValueAt(i, 0))  )==id){
                model.removeRow(i);
                return;
            }
        }
   }
   
   void newDepartmentTable(javax.swing.table.DefaultTableModel model, Department[] departmentsArr){
       model.setRowCount(0);
       for(int i=0; i<departmentsArr.length; i++){
           Department department = departmentsArr[i];
           departmentTableCreate(model, department);
       }
   }
   
    void newTableModel(javax.swing.table.DefaultTableModel model){
        
        Employee[] employees = employeeService.getArr();
        model.setRowCount(0);
        for(int i=0; i<employees.length; i++){
            Employee employee = employees[i];
            if(employee!=null){
                model.addRow( new Object[]{ employee.getId(), employee.getName(), employee.getLastName(), employee.getDepartment().getName(), employee.getCreatedLocalDateTime().toLocalDate().toString(), 
                    (employee.getUpdatedLocalDateTime().isEmpty())?("----"):( employee.getUpdatedLocalDateTime().get().toLocalDate().toString() ) }  );
            }
        }
        
    }
    
    void tableUpdate(javax.swing.table.DefaultTableModel model, int id, String name, String lastName, String department, LocalDateTime updatedLocalDateTime ){
        
        for(int i=0; i<model.getRowCount(); i++){
            if( Integer.valueOf( String.valueOf(model.getValueAt(i, 0))  )==id){
                model.setValueAt(name, i, 1);
                model.setValueAt(lastName, i, 2);
                model.setValueAt(department, i, 3);
                model.setValueAt(updatedLocalDateTime.toLocalDate().toString(), i, 5);
                return;
            }
        }
        
        
    }
    
    void tableCreate(javax.swing.table.DefaultTableModel model, Employee employee){
        String updatedDate = (employee.getUpdatedLocalDateTime().orElse(null)==null)?( "---" ):( employee.getUpdatedLocalDateTime().get().toLocalDate().toString() );
         model.addRow( new Object[]{ employee.getId(), employee.getName(), employee.getLastName(), employee.getDepartment().getName(),
         employee.getCreatedLocalDateTime().toLocalDate().toString(), updatedDate
         }  );
    }
    
    void tableDelete(javax.swing.table.DefaultTableModel model, int id){
        for(int i=0; i<model.getRowCount(); i++){
            if( Integer.valueOf(String.valueOf(model.getValueAt(i, 0) ))==id ){
                model.removeRow(i);
                return;
            }
        }
    }
    
    
    int popUpRow = -1;
    
    
    
    
    class SortByComparator implements Comparator<Employee>{
    public String sortBy;
    
    SortByComparator(String sortBy){
        this.sortBy = sortBy;
    }
    
    public int compare(Employee e1, Employee e2){
        int res=0;
        switch(sortBy){
                case "Unordered": 
                    res=0; break;
                case "Name + Last Name":
                    res= 
                        ( (e1.getName()+" "+e1.getLastName()) ).compareTo(
                            (e2.getName()+" "+e2.getLastName())
                        ); break;
                case "Name":
                    res= 
                        ( (e1.getName()) ).compareTo(
                            (e2.getName())
                        );break;
                case "Last Name":
                    res= 
                        ( (e1.getLastName()) ).compareTo(
                            (e2.getLastName())
                        ); break;
                case "ID":
                    res= 
                        ( (Integer)( e1.getId() ) ).compareTo(
                            (Integer)(e2.getId())
                        ); break;
            }
        return res;
    }
    
}



ArrayList<Employee> filterEmployeesArray(String name, String lastName, String departmentName, String sortBy){
    
    ArrayList<Employee> results = new ArrayList<Employee>(
        employeeService.getList().stream().filter(
            (Employee employee)->{
                return (( (name.equals(employee.getName()) ) || (name.equals("") ) )
                && ( ( lastName.equals(employee.getLastName()) ) || (lastName.equals("") ))                 && ( ( departmentName.equals(employee.getDepartment().getName()) ) || (departmentName.equals("Any Department") )  ));
                }
        ).sorted( 
            new SortByComparator(sortBy)
        ).collect(Collectors.toList() )
    );
    
    
    return results;
}
    
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDepartmentsArr();
        setDepartmentsString();
        updateDialog = new javax.swing.JDialog();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        idField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        updateComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        setDepartmentsArr();
        setDepartmentsString();
        createDialog = new javax.swing.JDialog();
        cancelButton1 = new javax.swing.JButton();
        okButton1 = new javax.swing.JButton();
        nameField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lastNameField1 = new javax.swing.JTextField();
        createComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        setDepartmentsArr();
        setDepartmentsString();
        findDialog = new javax.swing.JDialog();
        cancelButton2 = new javax.swing.JButton();
        okButton2 = new javax.swing.JButton();
        idField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        setDepartmentsArr();
        setDepartmentsString();
        deleteDialog = new javax.swing.JDialog();
        cancelButton3 = new javax.swing.JButton();
        okButton3 = new javax.swing.JButton();
        idField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        EmployeeExceptionDialog = new javax.swing.JDialog();
        EmployeeExceptionOKButton = new javax.swing.JToggleButton();
        EmployeeExceptionText = new javax.swing.JLabel();
        TablePopUpMenu = new javax.swing.JPopupMenu();
        Info = new javax.swing.JMenuItem();
        Update = new javax.swing.JMenuItem();
        Delete = new javax.swing.JMenuItem();
        filterDialog = new javax.swing.JDialog();
        filterNameLabel = new javax.swing.JLabel();
        filterNameField = new javax.swing.JTextField();
        filterLastNameLabel = new javax.swing.JLabel();
        filterLastNameField = new javax.swing.JTextField();
        filterLastNameLabel1 = new javax.swing.JLabel();
        filterComboBox = new javax.swing.JComboBox<>();
        filterApplyButton = new javax.swing.JButton();
        filterLastNameLabel2 = new javax.swing.JLabel();
        filterComboBoxSort = new javax.swing.JComboBox<>();
        filterResultsDialog = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        filterResultsTable = new javax.swing.JTable();
        setDepartmentsArr();
        setDepartmentsString();
        departmentCreateDialog = new javax.swing.JDialog();
        departmentCreateCancel = new javax.swing.JButton();
        departmentCreateOk = new javax.swing.JButton();
        departmentCreateName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        setDepartmentsArr();
        setDepartmentsString();
        departmentFindDialog = new javax.swing.JDialog();
        departmentFindCancel = new javax.swing.JButton();
        departmentFindOk = new javax.swing.JButton();
        departmentFindId = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        setDepartmentsArr();
        setDepartmentsString();
        departmentDeleteDialog = new javax.swing.JDialog();
        departmentDeleteCancel = new javax.swing.JButton();
        departmentDeleteOk = new javax.swing.JButton();
        departmentDeleteId = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        setDepartmentsArr();
        setDepartmentsString();
        DepartmentsDialog = new javax.swing.JDialog();
        departmentsScrollPane = new javax.swing.JScrollPane();
        departmentTable = new javax.swing.JTable();
        createDepartment = new javax.swing.JButton();
        findDepartment = new javax.swing.JButton();
        deleteDepartment = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        findButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        filterButton = new javax.swing.JButton();
        departmentsButton = new javax.swing.JButton();

        cancelButton.setText("Cancel");

        okButton.setText("OK");

        jLabel1.setText("ID:");

        jLabel2.setText("Last Name:");

        jLabel6.setText("Name:");

        updateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Department:");

        javax.swing.GroupLayout updateDialogLayout = new javax.swing.GroupLayout(updateDialog.getContentPane());
        updateDialog.getContentPane().setLayout(updateDialogLayout);
        updateDialogLayout.setHorizontalGroup(
            updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDialogLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(updateDialogLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lastNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(idField, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(updateComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        updateDialogLayout.setVerticalGroup(
            updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(updateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        cancelButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                updateDialog.setVisible(false);
            }
        });
        okButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                if( ! isNumeric(idField.getText()) ){
                    updateDialog.setVisible(false);
                    return;
                }
                int id =Integer.valueOf( idField.getText() );
                String name = nameField.getText();
                String lastName=lastNameField.getText();
                String dep = (String) updateComboBox.getSelectedItem();

                try{
                    EmployeeExceptionChecker.checkInfo(name, lastName);
                    if(employeeService.update(id, name, lastName, dep)){
                        LocalDateTime updatedLocalDateTime = employeeService.read(id).getUpdatedLocalDateTime().orElse(null);
                        tableUpdate(model, id, name, lastName, dep, updatedLocalDateTime);
                    }
                    //newTableModel();
                    updateDialog.setVisible(false);
                }
                catch(EmployeeException exception){
                    EmployeeExceptionDialog.setModal(true);
                    EmployeeExceptionDialog.setSize(280, 180);
                    EmployeeExceptionText.setText(exception.getMessage());
                    EmployeeExceptionDialog.setVisible(true);
                }

                //Employee employee = new Employee(name, lastName);

            }
        });
        updateComboBox.setModel( new javax.swing.DefaultComboBoxModel<> (departmentsString) );

        cancelButton1.setText("Cancel");

        okButton1.setText("OK");

        jLabel4.setText("Name:");

        jLabel5.setText("Last Name:");

        createComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Department:");

        javax.swing.GroupLayout createDialogLayout = new javax.swing.GroupLayout(createDialog.getContentPane());
        createDialog.getContentPane().setLayout(createDialogLayout);
        createDialogLayout.setHorizontalGroup(
            createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createDialogLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(cancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(okButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(createDialogLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lastNameField1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(nameField1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(createComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        createDialogLayout.setVerticalGroup(
            createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createDialogLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(createDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        cancelButton1.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                createDialog.setVisible(false);
            }
        });
        okButton1.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                String name = nameField1.getText();
                String lastName = lastNameField1.getText();
                String dep = (String)createComboBox.getSelectedItem();

                try{
                    EmployeeExceptionChecker.checkInfo(name, lastName);
                    Employee employee = new Employee(name, lastName);

                    for(int i=0; i<departmentsArr.length; i++){
                        if(departmentsArr[i].getName().equals(dep)){
                            employee.setDepartment(departmentsArr[i]);
                            break;
                        }
                    }

                    if(employeeService.create(employee)){
                        tableCreate(model, employee);
                    }

                    //newTableModel();

                    createDialog.setVisible(false);
                }
                catch(EmployeeException exception){
                    EmployeeExceptionDialog.setModal(true);
                    EmployeeExceptionDialog.setSize(280, 180);
                    EmployeeExceptionText.setText(exception.getMessage());
                    EmployeeExceptionDialog.setVisible(true);
                }

            }
        });
        /*String[] departmentsString = new String[departmentsArr.length ] ;
        for(int i=0; i<departmentsArr.length; i++){

            departmentsString[i] = departmentsArr[i].getName();

        }*/
        createComboBox.setModel( new javax.swing.DefaultComboBoxModel<> (departmentsString) );

        cancelButton2.setText("Cancel");

        okButton2.setText("OK");

        jLabel7.setText("ID:");

        javax.swing.GroupLayout findDialogLayout = new javax.swing.GroupLayout(findDialog.getContentPane());
        findDialog.getContentPane().setLayout(findDialogLayout);
        findDialogLayout.setHorizontalGroup(
            findDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(findDialogLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(cancelButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(okButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(findDialogLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(idField1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        findDialogLayout.setVerticalGroup(
            findDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, findDialogLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(findDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(findDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        cancelButton2.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                findDialog.setVisible(false);
            }
        });
        okButton2.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){

                if( ! isNumeric(idField1.getText() ) ){
                    findDialog.setVisible(false);
                    return;
                }

                int id = parseInt(idField1.getText() );
                Employee employee = employeeService.read(id);
                if( (employee != null) && (employee.getDepartment()!=null) ){
                    String name=employee.getName();
                    String lastName = employee.getLastName();
                    String dep = employee.getDepartment().getName();
                    String creationDate = employee.getCreatedLocalDateTime().toLocalDate().toString();
                    String updatedDate =( employee.getUpdatedLocalDateTime().orElse(null)==null )?("----"):( employee.getUpdatedLocalDateTime().get().toLocalDate().toString() );
                    JOptionPane.showMessageDialog(null, "The employee with the specified id is:\n\tID: "+id+"\n\tName: "+name+"\n\tLast Name: "+lastName+"\n\tDepartment: "+dep
                        +"\n\tCreation Date: "+creationDate+"\n\tUpdated Date: "+updatedDate);
                }
                else{
                    JOptionPane.showMessageDialog(null, "The employee with the specified id hasn't been found...");
                }

                findDialog.setVisible(false);
            }
        });

        cancelButton3.setText("Cancel");

        okButton3.setText("OK");

        jLabel8.setText("ID:");

        javax.swing.GroupLayout deleteDialogLayout = new javax.swing.GroupLayout(deleteDialog.getContentPane());
        deleteDialog.getContentPane().setLayout(deleteDialogLayout);
        deleteDialogLayout.setHorizontalGroup(
            deleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteDialogLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(cancelButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(okButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(deleteDialogLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(idField2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        deleteDialogLayout.setVerticalGroup(
            deleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteDialogLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(deleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(deleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        cancelButton3.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                deleteDialog.setVisible(false);
            }
        });
        okButton3.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){

                if( ! isNumeric(idField2.getText()) ){
                    deleteDialog.setVisible(false);
                    return;
                }

                int id = parseInt(idField2.getText() );

                employeeService.delete(id);

                //newTableModel();
                tableDelete(model, id);

                deleteDialog.setVisible(false);
            }
        });

        EmployeeExceptionOKButton.setText("OK");

        EmployeeExceptionText.setText("jLabel11");

        javax.swing.GroupLayout EmployeeExceptionDialogLayout = new javax.swing.GroupLayout(EmployeeExceptionDialog.getContentPane());
        EmployeeExceptionDialog.getContentPane().setLayout(EmployeeExceptionDialogLayout);
        EmployeeExceptionDialogLayout.setHorizontalGroup(
            EmployeeExceptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeExceptionDialogLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(EmployeeExceptionOKButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(EmployeeExceptionDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EmployeeExceptionText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        EmployeeExceptionDialogLayout.setVerticalGroup(
            EmployeeExceptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeExceptionDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EmployeeExceptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EmployeeExceptionOKButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EmployeeExceptionOKButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                EmployeeExceptionDialog.setVisible(false);
            }
        });

        Info.setText("jMenuItem1");
        TablePopUpMenu.add(Info);
        Info.setText("Info");
        int InfoRow = -1;
        //Update.setText("Update");
        Info.addActionListener( new ActionListener(){
            public void actionPerformed(ActionEvent e){
                //int x = TablePopUpMenu.getLocation().x;
                //int y = TablePopUpMenu.getLocation().y;
                //int row = jTable1.rowAtPoint( TablePopUpMenu.getLocation() );
                int row=popUpRow;
                String id = jTable1.getValueAt(row, 0).toString();

                findDialog.setModal(true);

                idField1.setText(id);
                okButton2.doClick();
                //deleteDialog.setSize(new Dimension(300, 200));
                //deleteDialog.setVisible(true);
            }
        }  );

        Update.setText("jMenuItem1");
        TablePopUpMenu.add(Update);
        Update.setText("Update");
        int UpdateRow = -1;
        Update.addActionListener( new ActionListener(){
            public void actionPerformed(ActionEvent e){
                //int x = TablePopUpMenu.getLocation().x;
                //int y = TablePopUpMenu.getLocation().y;
                //int row = jTable1.rowAtPoint( TablePopUpMenu.getLocation() );
                int row = popUpRow;
                String id = jTable1.getValueAt(row, 0).toString();
                updateDialog.setModal(true);

                idField.setText(id);
                lastNameField.setText("");
                nameField.setText("");

                updateDialog.setSize(new Dimension(350, 300));
                updateDialog.setVisible(true);
            }
        }  );

        Delete.setText("jMenuItem1");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        TablePopUpMenu.add(Delete);
        Delete.setText("Delete");
        //Update.setText("Update");
        int DeleteRow = -1;
        Delete.addActionListener( new ActionListener(){
            public void actionPerformed(ActionEvent e){
                //int x = TablePopUpMenu.getLocation().x;
                //int y = TablePopUpMenu.getLocation().y;
                //int row = jTable1.rowAtPoint( TablePopUpMenu.getLocation() );
                int row = popUpRow;
                String id = jTable1.getValueAt(row, 0).toString();

                deleteDialog.setModal(true);

                idField2.setText(id);
                okButton3.doClick();
                //deleteDialog.setSize(new Dimension(300, 200));
                //deleteDialog.setVisible(true);
            }
        }  );

        filterNameLabel.setText("Name:");

        filterLastNameLabel.setText("Last Name:");

        filterLastNameLabel1.setText("Department:");

        filterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        filterApplyButton.setText("Apply");

        filterLastNameLabel2.setText("Sort by:");

        filterComboBoxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout filterDialogLayout = new javax.swing.GroupLayout(filterDialog.getContentPane());
        filterDialog.getContentPane().setLayout(filterDialogLayout);
        filterDialogLayout.setHorizontalGroup(
            filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterDialogLayout.createSequentialGroup()
                .addGroup(filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterDialogLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filterNameLabel)
                            .addComponent(filterLastNameLabel)
                            .addComponent(filterLastNameLabel1)
                            .addComponent(filterLastNameLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(filterNameField)
                            .addComponent(filterLastNameField)
                            .addComponent(filterComboBox, 0, 92, Short.MAX_VALUE)
                            .addComponent(filterComboBoxSort, 0, 92, Short.MAX_VALUE)))
                    .addGroup(filterDialogLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(filterApplyButton)))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        filterDialogLayout.setVerticalGroup(
            filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterDialogLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterNameLabel)
                    .addComponent(filterNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterLastNameLabel)
                    .addComponent(filterLastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterLastNameLabel1)
                    .addComponent(filterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(filterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterLastNameLabel2)
                    .addComponent(filterComboBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(filterApplyButton)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        String[] comboBoxDepartmentsItems = new String [departmentsArr.length+1];

        for(int i = 0; i<departmentsArr.length; i++){
            comboBoxDepartmentsItems[i] = departmentsArr[i].getName();
        }
        comboBoxDepartmentsItems[ comboBoxDepartmentsItems.length-1 ] = "Any Department";
        javax.swing.DefaultComboBoxModel comboBoxModel = new javax.swing.DefaultComboBoxModel<>( comboBoxDepartmentsItems );
        filterComboBox.setModel(comboBoxModel);
        filterApplyButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){

                String name = filterNameField.getText();
                String lastName = filterLastNameField.getText();
                String departmentName =  filterComboBox.getSelectedItem().toString();
                String sortBy = filterComboBoxSort.getSelectedItem().toString();

                System.out.println(name);
                System.out.println(lastName);
                System.out.println(departmentName);

                ArrayList<Employee> filteredEmployeesArray =
                filterEmployeesArray(name, lastName, departmentName, sortBy);

                System.out.println(filteredEmployeesArray.size());

                filterResultsTableModel.setRowCount(0);

                for(int i=0; i<filteredEmployeesArray.size(); i++){
                    Employee employee = filteredEmployeesArray.get(i);
                    tableCreate(filterResultsTableModel, employee);
                }

                filterResultsDialog.setModal(true);
                filterResultsDialog.setSize(440, 300);

                filterResultsDialog.setVisible(true);
                //filterDialog.setVisible(false);

            }
        });
        String[] comboBoxSortItems = {"Unordered", "Name", "Last Name",  "Name + Last Name", "ID" };
        javax.swing.DefaultComboBoxModel comboBoxSortModel = new javax.swing.DefaultComboBoxModel<>( comboBoxSortItems );

        filterComboBoxSort.setModel( comboBoxSortModel );

        setDepartmentsArr();
        setDepartmentsString();

        filterResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Last Name", "Department"
            }
        ));
        jScrollPane2.setViewportView(filterResultsTable);
        filterResultsTable.setModel(filterResultsTableModel);

        javax.swing.GroupLayout filterResultsDialogLayout = new javax.swing.GroupLayout(filterResultsDialog.getContentPane());
        filterResultsDialog.getContentPane().setLayout(filterResultsDialogLayout);
        filterResultsDialogLayout.setHorizontalGroup(
            filterResultsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterResultsDialogLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        filterResultsDialogLayout.setVerticalGroup(
            filterResultsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterResultsDialogLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        setDepartmentsArr();
        setDepartmentsString();

        departmentCreateCancel.setText("Cancel");

        departmentCreateOk.setText("OK");

        jLabel15.setText("Name:");

        javax.swing.GroupLayout departmentCreateDialogLayout = new javax.swing.GroupLayout(departmentCreateDialog.getContentPane());
        departmentCreateDialog.getContentPane().setLayout(departmentCreateDialogLayout);
        departmentCreateDialogLayout.setHorizontalGroup(
            departmentCreateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(departmentCreateDialogLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(departmentCreateCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(departmentCreateOk, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, departmentCreateDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(departmentCreateName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        departmentCreateDialogLayout.setVerticalGroup(
            departmentCreateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, departmentCreateDialogLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(departmentCreateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentCreateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(departmentCreateDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentCreateCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentCreateOk, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        departmentCreateCancel.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                departmentCreateDialog.setVisible(false);
            }
        });
        departmentCreateOk.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                String name = departmentCreateName.getText();

                if(name.length()==0){
                    return;
                }
                Department department = new Department();
                department.setName(name);
                departmentService.create(department);

                setDepartmentsArr();
                setDepartmentsString();
                newDepartmentTable(departmentTableModel, departmentsArr);

                departmentCreateDialog.setVisible(false);

            }
        });

        departmentFindCancel.setText("Cancel");

        departmentFindOk.setText("OK");

        jLabel18.setText("ID:");

        javax.swing.GroupLayout departmentFindDialogLayout = new javax.swing.GroupLayout(departmentFindDialog.getContentPane());
        departmentFindDialog.getContentPane().setLayout(departmentFindDialogLayout);
        departmentFindDialogLayout.setHorizontalGroup(
            departmentFindDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(departmentFindDialogLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(departmentFindCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(departmentFindOk, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(departmentFindDialogLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(departmentFindId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        departmentFindDialogLayout.setVerticalGroup(
            departmentFindDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, departmentFindDialogLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(departmentFindDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentFindId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(departmentFindDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentFindCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentFindOk, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        departmentFindCancel.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                departmentFindDialog.setVisible(false);
            }
        });
        departmentFindOk.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){

                if( ! isNumeric(departmentFindId.getText() ) ){
                    findDialog.setVisible(false);
                    return;
                }

                int id = parseInt(departmentFindId.getText() );
                Department department = departmentService.getDepartmentById(id);
                if( (department != null)  ){
                    String name=department.getName();
                    JOptionPane.showMessageDialog(null, "The department with the specified id is:\n\tID: "+id+"\n\tName: "+name);
                }
                else{
                    JOptionPane.showMessageDialog(null, "The department with the specified id hasn't been found...");
                }

                departmentFindDialog.setVisible(false);
            }
        });

        departmentDeleteCancel.setText("Cancel");

        departmentDeleteOk.setText("OK");

        jLabel19.setText("ID:");

        javax.swing.GroupLayout departmentDeleteDialogLayout = new javax.swing.GroupLayout(departmentDeleteDialog.getContentPane());
        departmentDeleteDialog.getContentPane().setLayout(departmentDeleteDialogLayout);
        departmentDeleteDialogLayout.setHorizontalGroup(
            departmentDeleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(departmentDeleteDialogLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(departmentDeleteCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(departmentDeleteOk, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(departmentDeleteDialogLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addComponent(departmentDeleteId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        departmentDeleteDialogLayout.setVerticalGroup(
            departmentDeleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, departmentDeleteDialogLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(departmentDeleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentDeleteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(departmentDeleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentDeleteCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentDeleteOk, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        departmentDeleteCancel.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                departmentDeleteDialog.setVisible(false);
            }
        });
        departmentDeleteOk.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){

                if( ! isNumeric(departmentDeleteId.getText()) ){
                    deleteDialog.setVisible(false);
                    return;
                }

                int id = parseInt(departmentDeleteId.getText() );

                Employee[] employeesArray = employeeService.getArr();
                for(int i=0; i<employeesArray.length; i++){
                    if(employeesArray[i].getDepartment().getId()==id){
                        JOptionPane.showMessageDialog(
                            null,
                            "The department with the specified Id cannot be deleted, because there are employees assigned to it.");

                        departmentDeleteDialog.setVisible(false);
                        return;
                    }
                }

                departmentService.delete(id);

                setDepartmentsArr();
                setDepartmentsString();
                newDepartmentTable(departmentTableModel, departmentsArr);

                departmentDeleteDialog.setVisible(false);
            }
        });

        departmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Last Name"
            }
        ));
        departmentsScrollPane.setViewportView(departmentTable);
        departmentTable.setModel(departmentTableModel);

        newDepartmentTable(departmentTableModel, departmentsArr);

        createDepartment.setText("Create");

        findDepartment.setText("Find");

        deleteDepartment.setText("Delete");

        javax.swing.GroupLayout DepartmentsDialogLayout = new javax.swing.GroupLayout(DepartmentsDialog.getContentPane());
        DepartmentsDialog.getContentPane().setLayout(DepartmentsDialogLayout);
        DepartmentsDialogLayout.setHorizontalGroup(
            DepartmentsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DepartmentsDialogLayout.createSequentialGroup()
                .addGroup(DepartmentsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DepartmentsDialogLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(createDepartment)
                        .addGap(40, 40, 40)
                        .addComponent(findDepartment)
                        .addGap(18, 18, 18)
                        .addComponent(deleteDepartment))
                    .addGroup(DepartmentsDialogLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(departmentsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        DepartmentsDialogLayout.setVerticalGroup(
            DepartmentsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DepartmentsDialogLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(DepartmentsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDepartment)
                    .addComponent(findDepartment)
                    .addComponent(deleteDepartment))
                .addGap(30, 30, 30)
                .addComponent(departmentsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        createDepartment.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                departmentCreateDialog.setModal(true);
                departmentCreateDialog.setSize(300, 250);
                departmentCreateDialog.setVisible(true);
            }
        });
        findDepartment.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                departmentFindDialog.setModal(true);
                departmentFindDialog.setSize(300, 200);
                departmentFindDialog.setVisible(true);
            }
        });
        deleteDepartment.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                departmentDeleteDialog.setModal(true);
                departmentDeleteDialog.setSize(300, 250);
                departmentDeleteDialog.setVisible(true);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Last Name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        setDepartmentsArr();
        setDepartmentsString();

        jTable1.setModel(model);

        Employee[] employeesArrayForTable1 = employeeService.getArr();
        int maxId1=0;
        for(int i=0; i<employeesArrayForTable1.length; i++){
            tableCreate(model, employeesArrayForTable1[i]);
            maxId1 = java.lang.Math.max(maxId1, employeesArrayForTable1[i].getId());
        }

        Employee.setIdGenerator(maxId1+1);

        jTable1.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent me){
                if(SwingUtilities.isRightMouseButton(me)){
                    int row = jTable1.rowAtPoint(me.getPoint() );
                    popUpRow = row;
                    TablePopUpMenu.show(jTable1, me.getX(), me.getY());

                }
            }

        });

        createButton.setText("Create");

        findButton.setText("Find");

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");

        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        departmentsButton.setText("Departments");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(createButton)
                        .addGap(32, 32, 32)
                        .addComponent(editButton)
                        .addGap(42, 42, 42)
                        .addComponent(findButton)
                        .addGap(38, 38, 38)
                        .addComponent(deleteButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(filterButton)
                        .addGap(35, 35, 35)
                        .addComponent(departmentsButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(editButton)
                    .addComponent(findButton)
                    .addComponent(deleteButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filterButton)
                    .addComponent(departmentsButton))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        createButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                createDialog.setModal(true);

                nameField1.setText("");
                lastNameField1.setText("");
                createComboBox.setModel( new javax.swing.DefaultComboBoxModel<> (departmentsString) );

                createDialog.setSize(new Dimension(350, 300));
                createDialog.setVisible(true);
                //...
            }
        });
        findButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                findDialog.setModal(true);

                idField1.setText("");

                findDialog.setSize(new Dimension(300, 200));
                findDialog.setVisible(true);
            }
        });
        editButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                updateDialog.setModal(true);

                idField.setText("");
                lastNameField.setText("");
                nameField.setText("");
                updateComboBox.setModel( new javax.swing.DefaultComboBoxModel<> (departmentsString) );
                updateDialog.setSize(new Dimension(350, 300));
                updateDialog.setVisible(true);
            }
        });
        deleteButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                deleteDialog.setModal(true);

                idField2.setText("");

                deleteDialog.setSize(new Dimension(300, 200));
                deleteDialog.setVisible(true);
            }
        });
        filterButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                filterDialog.setModal(true);

                filterNameField.setText("");
                filterLastNameField.setText("");

                String[] comboBoxDepartmentsItems = new String [departmentsArr.length+1];

                for(int i = 0; i<departmentsArr.length; i++){
                    comboBoxDepartmentsItems[i] = departmentsArr[i].getName();
                }
                comboBoxDepartmentsItems[ comboBoxDepartmentsItems.length-1 ] = "Any Department";
                javax.swing.DefaultComboBoxModel comboBoxModel = new javax.swing.DefaultComboBoxModel<>( comboBoxDepartmentsItems );
                filterComboBox.setModel(comboBoxModel);

                filterComboBox.setSelectedItem("Any Department");

                filterDialog.setSize(300, 260);
                filterDialog.setVisible(true);
            }
        });
        departmentsButton.addActionListener( new ActionListener(){
            public void actionPerformed(ActionEvent e){
                DepartmentsDialog.setModal(true);
                DepartmentsDialog.setSize(450, 350);
                DepartmentsDialog.setVisible(true);

            }
        } );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editButtonActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Delete;
    private javax.swing.JDialog DepartmentsDialog;
    private javax.swing.JDialog EmployeeExceptionDialog;
    private javax.swing.JToggleButton EmployeeExceptionOKButton;
    private javax.swing.JLabel EmployeeExceptionText;
    private javax.swing.JMenuItem Info;
    private javax.swing.JPopupMenu TablePopUpMenu;
    private javax.swing.JMenuItem Update;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cancelButton1;
    private javax.swing.JButton cancelButton2;
    private javax.swing.JButton cancelButton3;
    private javax.swing.JButton createButton;
    private javax.swing.JComboBox<String> createComboBox;
    private javax.swing.JButton createDepartment;
    private javax.swing.JDialog createDialog;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteDepartment;
    private javax.swing.JDialog deleteDialog;
    private javax.swing.JButton departmentCreateCancel;
    private javax.swing.JDialog departmentCreateDialog;
    private javax.swing.JTextField departmentCreateName;
    private javax.swing.JButton departmentCreateOk;
    private javax.swing.JButton departmentDeleteCancel;
    private javax.swing.JDialog departmentDeleteDialog;
    private javax.swing.JTextField departmentDeleteId;
    private javax.swing.JButton departmentDeleteOk;
    private javax.swing.JButton departmentFindCancel;
    private javax.swing.JDialog departmentFindDialog;
    private javax.swing.JTextField departmentFindId;
    private javax.swing.JButton departmentFindOk;
    private javax.swing.JTable departmentTable;
    private javax.swing.JButton departmentsButton;
    private javax.swing.JScrollPane departmentsScrollPane;
    private javax.swing.JButton editButton;
    private javax.swing.JButton filterApplyButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JComboBox<String> filterComboBox;
    private javax.swing.JComboBox<String> filterComboBoxSort;
    private javax.swing.JDialog filterDialog;
    private javax.swing.JTextField filterLastNameField;
    private javax.swing.JLabel filterLastNameLabel;
    private javax.swing.JLabel filterLastNameLabel1;
    private javax.swing.JLabel filterLastNameLabel2;
    private javax.swing.JTextField filterNameField;
    private javax.swing.JLabel filterNameLabel;
    private javax.swing.JDialog filterResultsDialog;
    private javax.swing.JTable filterResultsTable;
    private javax.swing.JButton findButton;
    private javax.swing.JButton findDepartment;
    private javax.swing.JDialog findDialog;
    private javax.swing.JTextField idField;
    private javax.swing.JTextField idField1;
    private javax.swing.JTextField idField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField lastNameField1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField nameField1;
    private javax.swing.JButton okButton;
    private javax.swing.JButton okButton1;
    private javax.swing.JButton okButton2;
    private javax.swing.JButton okButton3;
    private javax.swing.JComboBox<String> updateComboBox;
    private javax.swing.JDialog updateDialog;
    // End of variables declaration//GEN-END:variables
}
